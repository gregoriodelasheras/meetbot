{"version":3,"sources":["assets/images/logo.svg","Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Event","handleToggleEvent","setState","isCollapsed","state","showCollapsedEvent","event","props","className","href","htmlLink","target","rel","description","status","this","summary","start","dateTime","timeZone","end","location","type","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","fontWeight","fontSize","WarningAlert","ErrorAlert","CitySearch","handleInputChanged","value","showSuggestions","suggestions","locations","filter","toUpperCase","indexOf","length","query","infoText","handleItemClicked","suggestion","updateEvents","undefined","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","errorText","min","max","mockData","kind","etag","created","updated","creator","email","self","organizer","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","data","extractLocations","Set","getEvents","NProgress","startsWith","done","navigator","onLine","JSON","parse","token","url","stringify","App","eventCount","mounted","locationEvents","slice","showWelcomeScreen","warningText","src","logo","alt","width","height","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.cd5edc14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.462aee1a.svg\";","import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isCollapsed: true,\r\n    };\r\n  }\r\n\r\n  handleToggleEvent = () => {\r\n    this.setState({\r\n      isCollapsed: this.state.isCollapsed === true ? false : true,\r\n    });\r\n  };\r\n\r\n  showCollapsedEvent = () => {\r\n    const { event } = this.props;\r\n\r\n    if (this.state.isCollapsed === false) {\r\n      return (\r\n        <div className='event-details'>\r\n          <h3>About event:</h3>\r\n          <a\r\n            href={event.htmlLink}\r\n            className='event-link'\r\n            target='_blank'\r\n            rel='noreferrer'>\r\n            See details on Google Calendar\r\n          </a>\r\n          <p className='event-description'>{event.description}</p>\r\n          <p className='event-status'>{event.status}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n\r\n    return (\r\n      <div className='Event'>\r\n        <h3 className='event-summary'>{event.summary}</h3>\r\n        <p className='event-start-date'>\r\n          {event.start.dateTime}, {event.start.timeZone}\r\n        </p>\r\n        <p className='event-end-date'>\r\n          {event.end.dateTime}, {event.end.timeZone}\r\n        </p>\r\n        <p className='event-location'>{event.location}</p>\r\n        <button\r\n          type='button'\r\n          className='btn-toggle-event'\r\n          onClick={this.handleToggleEvent}>\r\n          Details\r\n        </button>\r\n        {this.showCollapsedEvent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className='EventList'>\r\n        <h2>Events:</h2>\r\n        {events.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='Alert'>\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n\r\n  // Bonus: Overriding the getStyle method\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: '400',\r\n      fontSize: '1.2rem',\r\n    };\r\n  };\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n\r\n  // Bonus: Overriding the getStyle method\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: '900',\r\n      fontSize: '1rem',\r\n    };\r\n  };\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n\r\n  // Bonus: Overriding the getStyle method\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: '700',\r\n      fontSize: '1.4rem',\r\n    };\r\n  };\r\n}\r\n\r\nexport { InfoAlert, WarningAlert, ErrorAlert };\r\n","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: '',\r\n      suggestions: [],\r\n      showSuggestions: undefined,\r\n    };\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText:\r\n          'Sorry, we can not find the city you are looking for. Please try another city.',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n      infoText: '',\r\n    });\r\n\r\n    this.props.updateEvents(suggestion, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='CitySearch'>\r\n        <h2>Please enter a city:</h2>\r\n        <input\r\n          type='text'\r\n          className='city'\r\n          placeholder='Search events by city here'\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n        />\r\n        <ul\r\n          className='suggestions'\r\n          style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}>\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li key='all' onClick={() => this.handleItemClicked('all')}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n        <InfoAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      numberOfEvents: 32,\r\n    };\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n\r\n    if (value < 1 || value > 32) {\r\n      this.setState({\r\n        numberOfEvents: value,\r\n        errorText: 'Please select a number from 1 to 32 events',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        numberOfEvents: value,\r\n        errorText: '',\r\n      });\r\n      this.props.updateEvents('', value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='NumberOfEvents'>\r\n        <h2>Please select a number of events:</h2>\r\n        <input\r\n          type='number'\r\n          className='input-number-events'\r\n          min='1'\r\n          max='32'\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","const mockData = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description:\r\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n","import axios from 'axios';\r\nimport { mockData } from './mock-data';\r\nimport NProgress from 'nprogress';\r\n\r\n// Check the token's validity\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`,\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n// Remove the code from the URL once it is no longer in use\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\n// When the token doesn't exist or is invalid, get a new one\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`,\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n// Get Access Token\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    // Then App checks for an authorization code\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      // The user is automatically redirected to the Google Authorization Screen\r\n      const results = await axios.get(\r\n        'https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url',\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\n// Take events from Google Calendar API, remove duplicates and create a new array\r\nexport const extractLocations = (events) => {\r\n  let extractLocations = events.map((event) => event.location);\r\n  let locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\n// If use localhost, return the mock data. Otherwise, use the real API\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  if (!navigator.onLine) {\r\n    const events = localStorage.getItem('lastEvents');\r\n    NProgress.done();\r\n    return JSON.parse(events);\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport logo from './assets/images/logo.svg';\r\nimport './App.css';\r\nimport './nprogress.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\n/* import WelcomeScreen from './WelcomeScreen'; */\r\nimport {\r\n  getEvents,\r\n  extractLocations /* , checkToken, getAccessToken */,\r\n} from './api';\r\nimport { WarningAlert } from './Alert';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      events: [],\r\n      locations: [],\r\n      numberOfEvents: 32,\r\n      showWelcomeScreen: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n\r\n    if (!navigator.onLine) {\r\n      this.setState({\r\n        warningText:\r\n          'You are currently using the app offline. Events may be out of date.',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        warningText: '',\r\n      });\r\n    }\r\n\r\n    /*     const accessToken = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get('code');\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) }); */\r\n\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: events.slice(0, this.state.numberOfEvents),\r\n          locations: extractLocations(events),\r\n        });\r\n      }\r\n    });\r\n\r\n    /*     if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events: events,\r\n            locations: extractLocations(events),\r\n          });\r\n        }\r\n      });\r\n    } */\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      const locationEvents =\r\n        location === 'all' && eventCount === 0\r\n          ? events\r\n          : location !== 'all' && eventCount === 0\r\n          ? events.filter((event) => event.location === location)\r\n          : events.slice(0, eventCount);\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: locationEvents,\r\n          numberOfEvents: eventCount,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.showWelcomeScreen === undefined)\r\n      return <div className='App' />;\r\n\r\n    return (\r\n      <div className='App'>\r\n        <img\r\n          src={logo}\r\n          alt='Logo'\r\n          className='logo-web'\r\n          width='300'\r\n          height='100'\r\n        />\r\n        <h1>Meetbot</h1>\r\n        <WarningAlert text={this.state.warningText} />\r\n        <CitySearch\r\n          locations={this.state.locations}\r\n          updateEvents={this.updateEvents}\r\n        />\r\n        <NumberOfEvents\r\n          numberOfEvents={this.state.numberOfEvents}\r\n          updateEvents={this.updateEvents}\r\n        />\r\n        <EventList events={this.state.events} />\r\n        {/*         <WelcomeScreen\r\n          showWelcomeScreen={this.state.showWelcomeScreen}\r\n          getAccessToken={() => {\r\n            getAccessToken();\r\n          }}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  // Check first if the environment is production or not, and then, if a service worker\n  // is compatible with the current browser before registering it.\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorkerRegistration';\r\nimport * as atatus from 'atatus-spa';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// Enable the service worker\r\nserviceWorker.register();\r\natatus.config('e1684a1fb3644b0aae4c2db6df955548').install();\r\n"],"sourceRoot":""}