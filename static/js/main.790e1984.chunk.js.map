{"version":3,"sources":["assets/images/logo.svg","Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","data-visualization/EventGenre.js","data-visualization/EventNumbers.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","handleToggleEvent","setState","isCollapsed","state","showCollapsedEvent","event","props","className","Box","description","Link","href","htmlLink","color","target","rel","this","startEvent","Date","start","dateTime","endEvent","end","Card","py","px","summary","toLocaleString","location","my","Button","startIcon","variant","onClick","Component","EventList","events","Grid","container","spacing","map","item","xs","sm","md","id","Alert","fontWeight","fontSize","style","getStyle","text","InfoAlert","WarningAlert","ErrorAlert","CitySearch","handleInputChanged","value","showSuggestions","suggestions","locations","filter","toUpperCase","indexOf","length","query","infoText","handleItemClicked","suggestion","updateEvents","TextField","type","label","placeholder","autoComplete","onChange","InputProps","startAdornment","InputAdornment","position","display","NumberOfEvents","numberOfEvents","errorText","inputProps","min","max","EventGenre","useState","data","setData","chartColors","useEffect","genre","replace","split","includes","name","ResponsiveContainer","width","height","PieChart","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","percent","toFixed","entry","index","Cell","Legend","align","EventNumbers","ScatterChart","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","cursor","Scatter","number","city","shift","WelcomeScreen","classes","makeStyles","theme","link","icon","marginRight","useStyles","showWelcomeScreen","CssBaseline","Container","maxWidth","p","src","logo","alt","getAccessToken","viewBox","xmlns","d","Breadcrumbs","aria-label","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","checkToken","access_token","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","localStorage","setItem","accessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","getEvents","NProgress","startsWith","done","extractLocations","navigator","onLine","JSON","parse","token","url","stringify","Set","App","eventCount","mounted","currentLocation","slice","undefined","isTokenValid","warningText","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.790e1984.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.462aee1a.svg\";","import React, { Component } from 'react';\r\n\r\n// Material-UI\r\nimport { Card, Box, Button, Link } from '@material-ui/core';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\n\r\nclass Event extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isCollapsed: true,\r\n    };\r\n  }\r\n\r\n  // Allow user to show or hide the collapsed event information.\r\n  handleToggleEvent = () => {\r\n    this.setState({\r\n      isCollapsed: this.state.isCollapsed === true ? false : true,\r\n    });\r\n  };\r\n\r\n  // Display the collapsed information to the user.\r\n  showCollapsedEvent = () => {\r\n    const { event } = this.props;\r\n\r\n    if (this.state.isCollapsed === false) {\r\n      return (\r\n        <div className='event-details'>\r\n          <Box>\r\n            <h3>About the event:</h3>\r\n            <p className='event-description'>\r\n              <em>{event.description}</em>\r\n            </p>\r\n            <Link\r\n              href={event.htmlLink}\r\n              color='secondary'\r\n              className='event-link'\r\n              target='_blank'\r\n              rel='noreferrer'>\r\n              See details on Google Calendar\r\n            </Link>\r\n          </Box>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    const startEvent = new Date(event.start.dateTime);\r\n    const endEvent = new Date(event.end.dateTime);\r\n\r\n    return (\r\n      <div className='Event'>\r\n        <Card>\r\n          <Box py={2} px={4}>\r\n            <h2 className='event-summary'>{event.summary}</h2>\r\n            <p className='event-start-date'>\r\n              <strong>Start: </strong>\r\n              {startEvent.toLocaleString()} (Locale Time)\r\n            </p>\r\n            <p className='event-end-date'>\r\n              <strong>End: </strong> {endEvent.toLocaleString()} (Locale Time)\r\n            </p>\r\n            <p className='event-location'>\r\n              <strong>Location: </strong> {event.location}\r\n            </p>\r\n            <Box my={2}>\r\n              <Button\r\n                startIcon={<UnfoldMore />}\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={this.handleToggleEvent}>\r\n                Details\r\n              </Button>\r\n            </Box>\r\n            {this.showCollapsedEvent()}\r\n          </Box>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\n// Material-UI\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n\r\n    return (\r\n      <ul className='EventList'>\r\n        <h2>Meetbot has found the following events:</h2>\r\n        <Grid container spacing={2}>\r\n          {events.map((event) => (\r\n            <Grid key={event.id} item xs={12} sm={12} md={6}>\r\n              <li key={event.id}>\r\n                <Event event={event} />\r\n              </li>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n    this.fontWeight = '700';\r\n    this.fontSize = '1rem';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='Alert'>\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: this.fontWeight,\r\n      fontSize: this.fontSize,\r\n    };\r\n  };\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: this.fontWeight,\r\n      fontSize: this.fontSize,\r\n    };\r\n  };\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n      fontWeight: this.fontWeight,\r\n      fontSize: this.fontSize,\r\n    };\r\n  };\r\n}\r\n\r\nexport { InfoAlert, WarningAlert, ErrorAlert };\r\n","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\n// Material-UI\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\n\r\nclass CitySearch extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: '',\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n    };\r\n  }\r\n\r\n  // Filter by city to give user search suggestions.\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        showSuggestions: false,\r\n        infoText: 'Sorry, we can not find the city you are looking for.',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  // Select a city suggestion to display filtered data and then update events.\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n      infoText: '',\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  };\r\n\r\n  render() {\r\n    const { query, showSuggestions, suggestions, infoText } = this.state;\r\n\r\n    return (\r\n      <div className='CitySearch'>\r\n        <TextField\r\n          id='city-search'\r\n          type='text'\r\n          variant='outlined'\r\n          color='primary'\r\n          label='Search events by city here'\r\n          placeholder='E.g. \"Berlin\"'\r\n          className='input-city'\r\n          autoComplete='off'\r\n          value={query}\r\n          onChange={this.handleInputChanged}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position='start'>\r\n                <LocationCityIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <ul\r\n          className='suggestions'\r\n          style={showSuggestions ? {} : { display: 'none' }}>\r\n          {suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}>\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li\r\n            key='all'\r\n            className='all-cities'\r\n            onClick={() => this.handleItemClicked('all')}>\r\n            <strong>See all cities!</strong>\r\n          </li>\r\n        </ul>\r\n        <InfoAlert text={infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\n// Material-UI\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      numberOfEvents: 32,\r\n    };\r\n  }\r\n\r\n  // Validate input number and update the number of events to display.\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n\r\n    if (value < 1 || value > 32) {\r\n      this.setState({\r\n        errorText: 'Please select a number from 1 to 32 events',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errorText: '',\r\n      });\r\n      this.props.updateEvents(null, value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { numberOfEvents, errorText } = this.state;\r\n\r\n    return (\r\n      <div className='NumberOfEvents'>\r\n        <TextField\r\n          type='number'\r\n          variant='outlined'\r\n          color='primary'\r\n          label='Number of events'\r\n          className='input-number'\r\n          value={numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position='start'>\r\n                <PlaylistAddIcon />\r\n              </InputAdornment>\r\n            ),\r\n            inputProps: {\r\n              min: 1,\r\n              max: 32,\r\n            },\r\n          }}\r\n        />\r\n        <ErrorAlert text={errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { PieChart, Pie, Cell, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// Create a pie chart to compare the number of event genres.\r\nconst EventGenre = ({ events }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const chartColors = ['#FF004D', '#FFA300', '#00E436', '#29ADFF', '#7A09FA'];\r\n\r\n  /*\r\n    Listen changes in the events prop that are passed to the component,\r\n    and then forces a rendering by setting state.\r\n  */\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      // Create an array with the event genres from the API to visualize.\r\n      const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'Angular'];\r\n\r\n      /*\r\n        Get the event array, extract the summary and count how many\r\n        of each genre appear in the event summaries.\r\n      */\r\n      const data = genres.map((genre) => {\r\n        const value = events.filter(({ summary }) =>\r\n          summary\r\n            .replace('.js', '') // For \"Node.js\" event\r\n            .replace(',', '') // For \"jQuery,\" event\r\n            .replace('!!', '') // For \"JavaScript!!\" event\r\n            .replace('JS', '') // For \"AngularJS\" event\r\n            .replace('-Remote', '') // For \"AngularJS-Remote\" event\r\n            .split(' ')\r\n            .includes(genre),\r\n        ).length;\r\n        return { name: genre, value };\r\n      });\r\n      return data.filter((data) => data.value !== 0);\r\n    };\r\n\r\n    setData(() => getData());\r\n  }, [events]);\r\n\r\n  return (\r\n    <ResponsiveContainer width='100%' height={400}>\r\n      <PieChart>\r\n        <Pie\r\n          data={data}\r\n          cx='50%'\r\n          cy='50%'\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill='#8884d8'\r\n          dataKey='value'\r\n          label={({ name, percent }) =>\r\n            `${name} ${(percent * 100).toFixed(0)}%`\r\n          }>\r\n          {data.map((entry, index) => (\r\n            <Cell\r\n              key={`cell-${index}`}\r\n              fill={chartColors[index % chartColors.length]}\r\n            />\r\n          ))}\r\n        </Pie>\r\n        <Legend align='center' />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default EventGenre;\r\n","import React from 'react';\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n// Create a scatter chart to show the number of upcoming events by city.\r\nconst EventNumbers = (props) => {\r\n  const { locations, events } = props;\r\n\r\n  // Get the total number of events happening in each city.\r\n  const getData = () => {\r\n    // Filter the events by each location to get the length of the resulting array.\r\n    const data = locations.map((location) => {\r\n      const number = events.filter(\r\n        (event) => event.location === location,\r\n      ).length;\r\n      const city = location.split(', ').shift();\r\n      return { city, number };\r\n    });\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer width='100%' height={400}>\r\n      <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\r\n        <CartesianGrid strokeDasharray='3 3' />\r\n        <XAxis type='category' dataKey='city' name='City' />\r\n        <YAxis type='number' dataKey='number' name='Number of events' />\r\n        <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n        <Scatter data={getData()} fill='#FF004D' />\r\n      </ScatterChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default EventNumbers;\r\n","import React from 'react';\r\nimport './WelcomeScreen.css';\r\nimport logo from './assets/images/logo.svg';\r\n\r\n// Material-UI\r\nimport {\r\n  CssBaseline,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport PolicyIcon from '@material-ui/icons/Policy';\r\n\r\nfunction WelcomeScreen(props) {\r\n  // Custom Material-UI styling for Breadcrumbs\r\n  const useStyles = makeStyles((theme) => ({\r\n    link: {\r\n      display: 'flex',\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(0.5),\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return props.showWelcomeScreen ? (\r\n    <div className='WelcomeScreen'>\r\n      <CssBaseline />\r\n      <Container maxWidth='md' py={2}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} p={5}>\r\n            <img src={logo} alt='Logo' className='logo-web' />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <h1>Welcome to the Meetbot app!</h1>\r\n            <p>\r\n              Sign in with your Google account to discover upcoming events\r\n              around the world for Full-Stack Web Developers.\r\n            </p>\r\n          </Grid>\r\n\r\n          {/* Custom Google Login button */}\r\n          <Grid item xs={12}>\r\n            <button\r\n              type='button'\r\n              className='google-btn'\r\n              rel='nofollow noopener'\r\n              onClick={() => {\r\n                props.getAccessToken();\r\n              }}>\r\n              <span className='google-btn-icon'>\r\n                <svg viewBox='0 0 366 372' xmlns='http://www.w3.org/2000/svg'>\r\n                  <path\r\n                    d='M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z'\r\n                    id='Shape'\r\n                    fill='#EA4335'\r\n                  />\r\n                  <path\r\n                    d='M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z'\r\n                    id='Shape'\r\n                    fill='#FBBC05'\r\n                  />\r\n                  <path\r\n                    d='M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z'\r\n                    id='Shape'\r\n                    fill='#4285F4'\r\n                  />\r\n                  <path\r\n                    d='M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z'\r\n                    fill='#34A853'\r\n                  />\r\n                </svg>\r\n              </span>\r\n              <span className='google-btn-text'>Sign in with Google</span>\r\n            </button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <p>More about the app:</p>\r\n            <Breadcrumbs aria-label='breadcrumb'>\r\n              <Link\r\n                color='primary'\r\n                href='https://gregoriodelasheras.github.io/'\r\n                className={classes.link}\r\n                target='_blank'\r\n                rel='nofollow noopener'>\r\n                <AccountCircleIcon className={classes.icon} />\r\n                About the developer\r\n              </Link>\r\n              <Link\r\n                color='primary'\r\n                href='https://github.com/gregoriodelasheras/meetbot'\r\n                className={classes.link}\r\n                target='_blank'\r\n                rel='nofollow noopener'>\r\n                <CodeIcon className={classes.icon} />\r\n                Check the code\r\n              </Link>\r\n              <Link\r\n                color='primary'\r\n                href='https://gregoriodelasheras.github.io/meetbot/privacy.html'\r\n                className={classes.link}\r\n                target='_blank'\r\n                rel='nofollow noopener'>\r\n                <PolicyIcon className={classes.icon} />\r\n                Privacy policy\r\n              </Link>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  ) : null;\r\n}\r\nexport default WelcomeScreen;\r\n","const mockData = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description:\r\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n","import axios from 'axios';\r\nimport { mockData } from './mock-data';\r\nimport NProgress from 'nprogress';\r\n\r\n// 1 - Authentication and authorization\r\n\r\n// Check the token's validity.\r\nexport const checkToken = async (access_token) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${access_token}`,\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error);\r\n\r\n  return result;\r\n};\r\n\r\n// Remove the code from the URL once it is no longer in use.\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\n// When the token doesn't exist or is invalid, get a new one.\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const access_token = await fetch(\r\n    `https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`,\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n// Get Access Token.\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    // Then App checks for an authorization code.\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      // The user is automatically redirected to the Google Authorization Screen.\r\n      const results = await axios.get(\r\n        'https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url',\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\n// 2. API data loading\r\n\r\n// Load events depending on the environment or connection status.\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  // If use localhost, return the mock data (for development environment).\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return { events: mockData, locations: extractLocations(mockData) };\r\n  }\r\n\r\n  // If app is offline, load data from localStorage.\r\n  if (!navigator.onLine) {\r\n    const data = localStorage.getItem('lastEvents');\r\n    NProgress.done();\r\n    return {\r\n      events: JSON.parse(data).events,\r\n      locations: extractLocations(JSON.parse(data).events),\r\n    };\r\n  }\r\n\r\n  // If the app is online, it requests an access token and loads the API data.\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    //\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      // If there is data in the API, save a copy in localStorage.\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return { events: result.data.events, locations };\r\n  }\r\n};\r\n\r\n// Take events from Google Calendar API, remove duplicates and create a new array.\r\nexport const extractLocations = (events) => {\r\n  let extractLocations = events.map((event) => event.location);\r\n  let locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n","import React, { Component } from 'react';\r\nimport logo from './assets/images/logo.svg';\r\nimport './nprogress.css';\r\n\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport EventGenre from './data-visualization/EventGenre';\r\nimport EventNumbers from './data-visualization/EventNumbers';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\r\nimport { WarningAlert } from './Alert';\r\n\r\n// Material-UI\r\nimport { Grid, Card, Link } from '@material-ui/core';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      // Saves the API events.\r\n      events: [],\r\n      // Extract and save event locations.\r\n      locations: [],\r\n      // When the app starts, show all cities.\r\n      currentLocation: 'all',\r\n      // When the app starts, show the maximum number of events (32).\r\n      numberOfEvents: 32,\r\n      // Determine when to render the Welcome Screen.\r\n      showWelcomeScreen: undefined,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n\r\n    /*\r\n      - Get token from local storage and check if it is valid or not.\r\n      - If no token is present or invalid, users can enter a new authorization\r\n        code when they login.\r\n      - This code will be used to get a new token after getEvents() is executed.\r\n      - The app will be relaunched with the code parameter in the URL search\r\n        field after the site domain and will make a new mount for the App component.\r\n    */\r\n    const access_token = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(access_token)).error ? false : true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get('code');\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n\r\n    // Enable alert for the user when the app has no internet connection.\r\n    if (!navigator.onLine) {\r\n      this.setState({\r\n        warningText:\r\n          'You are currently using the app offline. Events may be out of date.',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        warningText: '',\r\n      });\r\n    }\r\n\r\n    // If internet connection is available + code or token, load API data.\r\n    if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((data) => {\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events: data.events.slice(0, this.state.numberOfEvents),\r\n            locations: extractLocations(data.events),\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  // Allow to update the data to display after loading the app or filtering.\r\n  updateEvents = (location, eventCount) => {\r\n    this.mounted = true;\r\n    // Loads the city and number of events that were selected before the last update.\r\n    const { currentLocation, numberOfEvents } = this.state;\r\n\r\n    /*\r\n      If the location is changed, the events are filtered according to the currently\r\n      selected city, then saved in an array, and then the array is reduced by\r\n      dividing by the number of current events.\r\n    */\r\n    if (location) {\r\n      getEvents().then((res) => {\r\n        const locationEvents =\r\n          location === 'all'\r\n            ? res.events\r\n            : res.events.filter((event) => event.location === location);\r\n        const events = locationEvents.slice(0, numberOfEvents);\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events: events,\r\n            locations: res.locations,\r\n            currentLocation: location,\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      /*\r\n        If the number of events to be displayed is changed, the events are\r\n        filtered according to the current city, then stored in an array and\r\n        then the array is reduced by dividing it by the new number of events\r\n        indicated by the user.\r\n      */\r\n      getEvents().then((res) => {\r\n        const locationEvents =\r\n          currentLocation === 'all'\r\n            ? res.events\r\n            : res.events.filter((event) => event.location === currentLocation);\r\n        const events = locationEvents.slice(0, eventCount);\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events: events,\r\n            locations: res.locations,\r\n            numberOfEvents: eventCount,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      locations,\r\n      numberOfEvents,\r\n      events,\r\n      warningText,\r\n      showWelcomeScreen,\r\n    } = this.state;\r\n\r\n    // true = show welcome screen || false = hide welcome screen.\r\n    if (showWelcomeScreen === undefined) return <div className='App' />;\r\n\r\n    return (\r\n      <div className='App'>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} p={5}>\r\n            <img src={logo} alt='Logo' className='logo-web' />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <h2>Let's look for events!</h2>\r\n\r\n              {/* Alert to notify the user when using the app offline. */}\r\n              <WarningAlert text={warningText} />\r\n\r\n              {/* Display a city search to filter events by city. */}\r\n              <CitySearch\r\n                locations={locations}\r\n                updateEvents={this.updateEvents}\r\n              />\r\n\r\n              {/* Display a number selector to specify how many events to view. */}\r\n              <NumberOfEvents\r\n                numberOfEvents={numberOfEvents}\r\n                updateEvents={this.updateEvents}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Data Visualization (D3.js + Recharts). */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <h3>Number of events per city</h3>\r\n                  <EventNumbers locations={locations} events={events} />{' '}\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                  <h3>Themes of the events</h3>\r\n                  <EventGenre events={events} />\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Display the list of filtered events. */}\r\n          <Grid item xs={12}>\r\n            <EventList events={events} />\r\n          </Grid>\r\n\r\n          {/* Footer. */}\r\n          <Grid item xs={12}>\r\n            <p>\r\n              Made with 💚 by{' '}\r\n              <Link\r\n                href='https://gregoriodelasheras.github.io/'\r\n                color='secondary'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                Francisco Gregorio de las Heras\r\n              </Link>\r\n            </p>\r\n            <p>\r\n              Latest version:{' '}\r\n              <Link\r\n                href='https://github.com/gregoriodelasheras/meetbot/releases/latest'\r\n                color='secondary'\r\n                target='_blank'\r\n                rel='noreferrer'>\r\n                v.1.0.6\r\n              </Link>\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n        <WelcomeScreen\r\n          showWelcomeScreen={showWelcomeScreen}\r\n          getAccessToken={() => {\r\n            getAccessToken();\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  // Check first if the environment is production or not, and then, if a service worker\r\n  // is compatible with the current browser before registering it.\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// Web Vitals Core report shows how the pages perform, based on real world usage data.\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n// Material-UI\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// Service Worker + Atatus.\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('e1684a1fb3644b0aae4c2db6df955548').install();\r\n\r\n// React.StrictMode = Highlight potential problems with an application (development mode only).\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Container maxWidth='md' py={2}>\r\n      <App />\r\n    </Container>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// Enable the service worker.\r\nserviceWorkerRegistration.register();\r\n\r\n// Enables reporting with Web Vitals.\r\nreportWebVitals();\r\n"],"sourceRoot":""}