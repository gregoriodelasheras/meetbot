{"version":3,"sources":["logo.svg","Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","handleToggleEvent","setState","isCollapsed","state","showCollapsedEvent","event","props","className","href","htmlLink","target","rel","description","status","this","summary","start","dateTime","timeZone","end","location","type","onClick","Component","EventList","events","map","id","CitySearch","handleInputChanged","value","suggestions","locations","filter","toUpperCase","indexOf","query","handleItemClicked","suggestion","showSuggestions","updateEvents","undefined","placeholder","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","min","max","mockData","kind","etag","created","updated","creator","email","self","organizer","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","get","axios","results","authUrl","data","extractLocations","Set","getEvents","NProgress","startsWith","done","token","url","JSON","stringify","App","eventCount","mounted","locationEvents","slice","src","logo","alt","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4ffee47b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.462aee1a.svg\";","import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isCollapsed: true,\r\n    };\r\n  }\r\n\r\n  handleToggleEvent = () => {\r\n    this.setState({\r\n      isCollapsed: this.state.isCollapsed === true ? false : true,\r\n    });\r\n  };\r\n\r\n  showCollapsedEvent = () => {\r\n    const { event } = this.props;\r\n\r\n    if (this.state.isCollapsed === false) {\r\n      return (\r\n        <div className='event-details'>\r\n          <h3>About event:</h3>\r\n          <a\r\n            href={event.htmlLink}\r\n            className='event-link'\r\n            target='_blank'\r\n            rel='noreferrer'>\r\n            See details on Google Calendar\r\n          </a>\r\n          <p className='event-description'>{event.description}</p>\r\n          <p className='event-status'>{event.status}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n\r\n    return (\r\n      <div className='Event'>\r\n        <h3 className='event-summary'>{event.summary}</h3>\r\n        <p className='event-start-date'>\r\n          {event.start.dateTime}, {event.start.timeZone}\r\n        </p>\r\n        <p className='event-end-date'>\r\n          {event.end.dateTime}, {event.end.timeZone}\r\n        </p>\r\n        <p className='event-location'>{event.location}</p>\r\n        <button\r\n          type='button'\r\n          className='btn-toggle-event'\r\n          onClick={this.handleToggleEvent}>\r\n          Details\r\n        </button>\r\n        {this.showCollapsedEvent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className='EventList'>\r\n        <h2>Events:</h2>\r\n        {events.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      query: '',\r\n      suggestions: [],\r\n      showSuggestions: undefined,\r\n    };\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false,\r\n    });\r\n\r\n    this.props.updateEvents(suggestion, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='CitySearch'>\r\n        <h2>Please enter a city:</h2>\r\n        <input\r\n          type='text'\r\n          className='city'\r\n          placeholder='Search events by city here'\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => {\r\n            this.setState({ showSuggestions: true });\r\n          }}\r\n        />\r\n        <ul\r\n          className='suggestions'\r\n          style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}>\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li key='all' onClick={() => this.handleItemClicked('all')}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      numberOfEvents: 32,\r\n    };\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n\r\n    this.setState({\r\n      numberOfEvents: value,\r\n    });\r\n\r\n    this.props.updateEvents('', value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='NumberOfEvents'>\r\n        <h2>Please select a number of events:</h2>\r\n        <input\r\n          type='number'\r\n          className='input-number-events'\r\n          min='1'\r\n          max='32'\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","const mockData = [\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181161784712000\"',\r\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:17:46.000Z',\r\n    updated: '2020-05-27T12:01:32.356Z',\r\n    summary: 'Learn JavaScript',\r\n    description:\r\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\r\n    location: 'London, UK',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-19T17:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-19T16:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n  {\r\n    kind: 'calendar#event',\r\n    etag: '\"3181159875584000\"',\r\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\r\n    status: 'confirmed',\r\n    htmlLink:\r\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\r\n    created: '2020-05-19T19:14:30.000Z',\r\n    updated: '2020-05-27T11:45:37.792Z',\r\n    summary: 'React is Fun',\r\n    description:\r\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\r\n    location: 'Berlin, Germany',\r\n    creator: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: 'fullstackwebdev@careerfoundry.com',\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    end: {\r\n      dateTime: '2020-05-20T15:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\r\n    originalStartTime: {\r\n      dateTime: '2020-05-20T14:00:00+02:00',\r\n      timeZone: 'Europe/Berlin',\r\n    },\r\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: 'default',\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n","import axios from 'axios';\r\nimport { mockData } from './mock-data';\r\nimport NProgress from 'nprogress';\r\n\r\n// Check the token's validity\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`,\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\n// Remove the code from the URL once it is no longer in use\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\n// When the token doesn't exist or is invalid, get a new one\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`,\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n// Get Access Token\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    // Then App checks for an authorization code\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      // The user is automatically redirected to the Google Authorization Screen\r\n      const results = await axios.get(\r\n        'https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url',\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\n// Take events from Google Calendar API, remove duplicates and create a new array\r\nexport const extractLocations = (events) => {\r\n  let extractLocations = events.map((event) => event.location);\r\n  let locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\n// If use localhost, return the mock data. Otherwise, use the real API\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = `https://6w6p3q6fx5.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './nprogress.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents, extractLocations } from './api';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      events: [],\r\n      locations: [],\r\n      numberOfEvents: 32,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: events.slice(0, this.state.numberOfEvents),\r\n          locations: extractLocations(events),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      const locationEvents =\r\n        location === 'all' && eventCount === 0\r\n          ? events\r\n          : location !== 'all' && eventCount === 0\r\n          ? events.filter((event) => event.location === location)\r\n          : events.slice(0, eventCount);\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: locationEvents,\r\n          numberOfEvents: eventCount,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <img src={logo} alt='Logo' className='img-fluid logo-web' />\r\n        <h1>Meetbot</h1>\r\n        <CitySearch\r\n          locations={this.state.locations}\r\n          updateEvents={this.updateEvents}\r\n        />\r\n        <NumberOfEvents\r\n          numberOfEvents={this.state.numberOfEvents}\r\n          updateEvents={this.updateEvents}\r\n        />\r\n        <EventList events={this.state.events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('e1684a1fb3644b0aae4c2db6df955548').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}